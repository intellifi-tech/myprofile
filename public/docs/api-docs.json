{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.0",
    "title": "Swagger MyProfile",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "demo.intellifi.tech/demo/MyProfile/web/public",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/index": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Tüm kullanıcılar",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": false,
            "schema": {
              "$ref": ""
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/show/{api_token}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Kullanıcı getirir",
        "description": "",
        "operationId": "showUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/update/{api_token}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Kulanıcı güncelle",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "api_token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "path",
            "name": "type",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Kullanıcı kayıt",
        "description": "",
        "operationId": "registerUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Adı",
            "required": true,
            "type": "string"
          },
          {
            "name": "surname",
            "in": "query",
            "description": "Soyadı",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Kullanıcı email adresi.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Kullanıcı şifresi.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Kullanıcı girişi",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Kullanıcı email adresi.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Kullanıcı şifresi.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "profile_photo": {
          "type": "string",
          "format": "longText"
        },
        "cover_photo": {
          "type": "string",
          "format": "text"
        },
        "title": {
          "type": "string",
          "format": "text"
        },
        "name": {
          "type": "string"
        },
        "career_history": {
          "type": "string",
          "format": "longText"
        },
        "short_biography": {
          "type": "string",
          "format": "longText"
        },
        "credentials": {
          "type": "string",
          "format": "longText"
        },
        "date_of_birth": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "format": "tinyInteger"
        },
        "sector_id": {
          "type": "integer",
          "format": "tinyInteger"
        },
        "email": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "tinyInteger"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "activity_date": {
          "type": "string",
          "format": "date"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "City": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "slug": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plate_no": {
          "type": "string"
        },
        "phone_code": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Town": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "city_id": {
          "type": "integer"
        },
        "slug": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Sector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "bigInteger"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}